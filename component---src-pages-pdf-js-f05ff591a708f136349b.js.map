{"version":3,"file":"component---src-pages-pdf-js-f05ff591a708f136349b.js","mappings":"2KAqLA,UA5EgB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACTC,EAAwBD,EAAxBC,oBACFC,GAAcF,GAAQ,IAAIE,YAC5BC,EAAAA,EAAAA,IAAgBH,EAAKE,YACrB,GACEE,GAA2BJ,GAAQ,IAAII,yBACzCD,EAAAA,EAAAA,IAAgBH,EAAKI,yBACrB,GACEC,GAAkBL,GAAQ,IAAIK,gBAChCF,EAAAA,EAAAA,IAAgBH,EAAKK,gBACrB,GACEC,GAAUN,GAAQ,IAAIM,QAASH,EAAAA,EAAAA,IAAgBH,EAAKM,QAAU,GAC5DC,EACNN,EADMM,SAAUC,EAChBP,EADgBO,SAChBP,EAD0BQ,SAC1BR,EADoCS,YACpCT,EADiDU,gBAGnD,OACE,gCACE,gBAAC,IAAD,CACEC,YAAW,2BAA6BL,EAA7B,KAA0CC,EAA1C,cAAgEP,EAAoBQ,SAApF,IACXR,oBAAqBA,EACrBY,MAAK,YAAcN,EAAd,MAA4BN,EAAoBQ,WAGvD,uBAAKK,UAAU,aACb,uBAAKA,UAAU,cACb,gBAAC,KAAD,CAASC,MAAM,QAAQC,KAAG,GACxB,uBAAKF,UAAU,eACb,uBACEG,KAAKC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAclB,EAAoBmB,QAChDC,MAAM,KACNC,OAAO,KACPC,KAAK,UACLC,MACHC,IAAI,WACJX,UAAU,kCAGd,uBAAKA,UAAU,UACf,gBAAC,KAAD,CAAoBb,oBAAqBA,EAAqBe,KAAG,IACjE,gBAAC,KAAD,CAAQV,OAAQA,EAAQU,KAAG,IAC3B,uBAAKU,MAAO,CAAEJ,OAAQ,OACtB,gBAAC,KAAD,CAAgBjB,eAAgBA,EAAgBW,KAAG,MAIvD,uBAAKF,UAAU,WACb,gBAAC,KAAD,CAASC,MAAM,UAAUC,KAAG,GAC1B,gBAAC,KAAD,CAAQA,KAAG,EAACW,SAAUnB,EAAUK,MAAON,IACvC,gBAAC,KAAD,CAASN,oBAAqBA,EAAqBe,KAAG,KAExD,gBAAC,KAAD,CAASD,MAAM,QAAQC,KAAG,GACxB,gBAAC,KAAD,CAAeY,KAAMC,EAAAA,YAAaC,KAAK,4BACtC1B,EAAwB2B,KAAI,SAACC,GAAD,OAC3B,gBAAC,KAAD,iBAAsBA,EAAtB,CAAkCC,IAAKD,EAAWE,GAAIlB,KAAG,QAG3D,uBAAKF,UAAU,UAEf,gBAAC,KAAD,CAAec,KAAMO,EAAAA,gBAAiBL,KAAK,cAC1C5B,EAAW6B,KAAI,SAACC,GAAD,OACd,gBAAC,KAAD,eAAeC,IAAKD,EAAWE,IAAQF,EAAvC,CAAmDhB,KAAG,QAGxD,uBAAKF,UAAU,UAEf,gBAAC,KAAD,CACEb,oBAAqBA,EACrBe,KAAG","sources":["webpack://resume/./src/pages/pdf.js"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { FaBriefcase, FaGraduationCap } from \"react-icons/fa\";\nimport { imageUrlFor } from \"../lib/image-url\";\nimport { buildImageObj } from \"../lib/helpers\";\n\nimport {\n  Header,\n  Section,\n  AboutMe,\n  ContactInformation,\n  Skills,\n  SectionHeader,\n  ProfessionalItem,\n  EducationItem,\n  HobbiesAndInterests,\n  Footer,\n  Certifications,\n} from \"./../components\";\nimport { mapEdgesToNodes } from \"../lib/helpers\";\nimport SEO from \"./../components/seo\";\n\nexport const query = graphql`\n  query pdfResumeQuery {\n    personalInformation: sanityPersonalInformation(\n      _id: { regex: \"/(drafts.|)personalInformation/\" }\n    ) {\n      fullName\n      _rawAbountMeDescription\n      _rawHobbiesAndInterests\n      jobTitle\n      location\n      phoneNumber\n      email\n      twitterUserName\n      image {\n        ...SanityImage\n      }\n      links {\n        link {\n          id\n          sequence\n          title\n          href\n          iconName\n        }\n        _key\n      }\n    }\n    professionalExperiences: allSanityProfessionalExperience(\n      sort: { fields: [startDate], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          organization\n          isCurrent\n          position\n          endDate\n          startDate\n          _rawDescription\n        }\n      }\n    }\n    certifications: allSanityCertification(\n      sort: { fields: [sequence], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          title\n          sequence\n          iconName\n        }\n      }\n    }\n    educations: allSanityEducation(sort: { fields: [sequence], order: ASC }) {\n      edges {\n        node {\n          id\n          year\n          sequence\n          title\n          organization\n          _rawDescription\n        }\n      }\n    }\n    skills: allSanitySkill(sort: { fields: [sequence], order: ASC }) {\n      edges {\n        node {\n          level\n          levelName\n          skills {\n            label\n            value\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n\n// markup\nconst PDFPage = ({ data }) => {\n  const { personalInformation } = data;\n  const educations = (data || {}).educations\n    ? mapEdgesToNodes(data.educations)\n    : [];\n  const professionalExperiences = (data || {}).professionalExperiences\n    ? mapEdgesToNodes(data.professionalExperiences)\n    : [];\n  const certifications = (data || {}).certifications\n    ? mapEdgesToNodes(data.certifications)\n    : [];\n  const skills = (data || {}).skills ? mapEdgesToNodes(data.skills) : [];\n  const { fullName, jobTitle, location, phoneNumber, twitterUserName } =\n    personalInformation;\n\n  return (\n    <>\n      <SEO\n        description={`Professional résumé for ${fullName}, ${jobTitle} living in ${personalInformation.location}.`}\n        personalInformation={personalInformation}\n        title={`Résumé | ${fullName} | ${personalInformation.location}`}\n      />\n\n      <div className=\"pdfLayout\">\n        <div className=\"pdfSidebar\">\n          <Section color=\"light\" pdf>\n            <div className=\"text-center\">\n              <img\n                src={imageUrlFor(buildImageObj(personalInformation.image))\n                  .width(180)\n                  .height(180)\n                  .auto(\"format\")\n                  .url()}\n                alt=\"user-pic\"\n                className=\"img-thumbnail rounded-circle\"\n              />\n            </div>\n            <div className=\"mt-xs\" />\n            <ContactInformation personalInformation={personalInformation} pdf />\n            <Skills skills={skills} pdf />\n            <div style={{ height: 280 }} />\n            <Certifications certifications={certifications} pdf />\n          </Section>\n        </div>\n\n        <div className=\"pdfMain\">\n          <Section color=\"primary\" pdf>\n            <Header pdf subtitle={jobTitle} title={fullName} />\n            <AboutMe personalInformation={personalInformation} pdf />\n          </Section>\n          <Section color=\"white\" pdf>\n            <SectionHeader icon={FaBriefcase} text=\"Professional Experience\" />\n            {professionalExperiences.map((experience) => (\n              <ProfessionalItem {...experience} key={experience.id} pdf />\n            ))}\n\n            <div className=\"mt-xs\" />\n\n            <SectionHeader icon={FaGraduationCap} text=\"Education\" />\n            {educations.map((experience) => (\n              <EducationItem key={experience.id} {...experience} pdf />\n            ))}\n\n            <div className=\"mt-xs\" />\n\n            <HobbiesAndInterests\n              personalInformation={personalInformation}\n              pdf\n            />\n          </Section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PDFPage;\n"],"names":["data","personalInformation","educations","mapEdgesToNodes","professionalExperiences","certifications","skills","fullName","jobTitle","location","phoneNumber","twitterUserName","description","title","className","color","pdf","src","imageUrlFor","buildImageObj","image","width","height","auto","url","alt","style","subtitle","icon","FaBriefcase","text","map","experience","key","id","FaGraduationCap"],"sourceRoot":""}